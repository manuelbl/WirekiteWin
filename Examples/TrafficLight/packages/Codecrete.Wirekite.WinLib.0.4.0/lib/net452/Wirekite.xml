<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wirekite</name>
    </assembly>
    <members>
        <member name="T:Codecrete.Wirekite.Device.WirekiteDevice">
            <summary>
            Wirekite device
            </summary>
            <remarks>
            Main class for interacting with the Wirekite device.
            Instances of this class cannot be created directly. Instead, the Wirekit service creates
            them when they are plugged in or when the service instance is created.</remarks>
            <seealso cref="T:Codecrete.Wirekite.Device.WirekiteService">The Wirekite service listening to devices being connected or disconnected</seealso>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.Close">
            <summary>
            Closes the Wirekite devices.
            </summary>
            <remarks>
            A closed device can no longer be used. It must be disconnected and connected again,
            or the Wirekite service must be restarted.
            </remarks>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ResetConfiguration">
            <summary>
            Resets the device to is initial configuration.
            </summary>
            <remarks>
            After the reset, all configured ports are invalid and all pins and
            modules are available for use again.
            </remarks>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.Finalize">
            <summary>
            Finalizes this instance.
            </summary>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.Dispose(System.Boolean)">
            <summary>
            Disposes of all resources linked to this device.
            </summary>
            <param name="disposing">Indicates if this method is called from <c>Dispose()</c></param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.Dispose">
            <summary>
            Disposes of all resources linked to this device.
            </summary>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ConfigureAnalogInputPin(Codecrete.Wirekite.Device.AnalogPin)">
            <summary>
            Configure a pin as an analog input
            </summary>
            <remarks>
            The analog input value can be read on demand with <see cref="M:Codecrete.Wirekite.Device.WirekiteDevice.ReadAnalogPin(System.Int32)"/>
            </remarks>
            <param name="pin">the analog pin (as per Teensy documentation)</param>
            <returns>the port ID of the configured analog input</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ConfigureAnalogInputPin(Codecrete.Wirekite.Device.AnalogPin,System.Int32,Codecrete.Wirekite.Device.AnalogInputCallback)">
            <summary>
            Configures a pin as an analog input with a delegate the receives a new input value at a specified interval
            </summary>
            <param name="pin">the analog pin (as per Teensy documentation)</param>
            <param name="interval">the interval (in ms) to sample the input value and notify the delegate</param>
            <param name="callback">the delegate called periodically with a new input value</param>
            <returns>the port ID of the configured analog input</returns>
            <remarks>
            The notification delegate is called on a background thread.
            </remarks>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ReleaseAnalogPin(System.Int32)">
            <summary>
            Releases a analog input and frees the pin for other use
            </summary>
            <param name="port">the port ID of the analog input</param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ReadAnalogPin(System.Int32)">
            <summary>
            Reads the value of the analog input.
            </summary>
            <param name="port">the analog input's port ID</param>
            <returns>the input value in the range between -1.0 and 1.0</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ConfigureDigitalOutputPin(System.Int32,Codecrete.Wirekite.Device.DigitalOutputPinAttributes,System.Boolean)">
            <summary>
            Configures a pin of the device to act as a digital output pin.
            </summary>
            <param name="pin">the pin number (as labelled on the Teensy)</param>
            <param name="attributes">additional features to be configured for the output pin</param>
            <param name="initialValue">initial value of pin (true for high, false for low)</param>
            <returns>the port ID for further operations on the configured digital output</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ReleaseDigitalPin(System.Int32)">
            <summary>
            Releases a digital input or output and frees the pin for other usage
            </summary>
            <param name="port">the port ID of the digital input or output</param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.WriteDigitalPin(System.Int32,System.Boolean)">
            <summary>
            Write a value to the digital output
            </summary>
            <param name="port">the digital output's port ID</param>
            <param name="value">the output value (true for high, false for low)</param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ConfigureDigitalInputPin(System.Int32,Codecrete.Wirekite.Device.DigitalInputPinAttributes,Codecrete.Wirekite.Device.InputCommunication)">
            <summary>
            Configure a pin as a digital input
            </summary>
            <remarks>
            The digital input value can be read with <see cref="M:Codecrete.Wirekite.Device.WirekiteDevice.ReadDigitalPin(System.Int32)"/>
            </remarks>
            <param name="pin">the pin number (as labelled on the Teensy board)</param>
            <param name="attributes">additional features to be configured</param>
            <param name="communication">the type of communication with the Wirekite device</param>
            <returns>the port ID of the configured digital input</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ConfigureDigitalInputPin(System.Int32,Codecrete.Wirekite.Device.DigitalInputPinAttributes,Codecrete.Wirekite.Device.DigitalInputCallback)">
            <summary>
            Configures a pin as a digitial input with notification about changes of the input value
            </summary>
            <param name="pin">the pin number (as labelled on the Teensy board)</param>
            <param name="attributes">additional features to be configured</param>
            <param name="callback">the delegate notified about changes of the input value</param>
            <returns>the port ID of the configured digital input</returns>
            <remarks>
            The <paramref name="attributes"/> must specify whether the notification should be triggered on
            the raising edge, the falling edge or both edges of the signal. The notification delegate is
            called on a background thread.
            </remarks>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ReadDigitalPin(System.Int32)">
            <summary>
            Reads the value of the digital input.
            </summary>
            <param name="port">the digital input's port ID</param>
            <returns>the input value</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ConfigureI2CMaster(Codecrete.Wirekite.Device.I2CPins,System.Int32)">
            <summary>
            Configures an I2C port as a master
            </summary>
            <remarks>
            Each pin pair belongs to a specific I2C module. A single module can only
            be connected to a single pin pair at a time.
            </remarks>
            <param name="pins">the SCL/SDA pin pair for the port</param>
            <param name="frequency">the frequency of for the I2C communication (in Hz). If in doubt, use 100,000 Hz.</param>
            <returns>the I2C port ID</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ReleaseI2CPort(System.Int32)">
            <summary>
            Releases the I2C port.
            </summary>
            <param name="port">the I2C port ID</param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.GetLastI2CResult(System.Int32)">
            <summary>
            Result code of the last send or receive
            </summary>
            <param name="port">the I2C port ID</param>
            <returns>the result code of the last operation on this port</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.SendOnI2CPort(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Send data to an I2C slave
            </summary>
            <remarks>
            <para>
            The operation performs a complete I2C transaction, starting with a START condition
            and ending with a STOP condition
            </para>
            <para>
            The request is executed sychnronously, i.e. the call blocks until the data
            has been transmitted or the transmission has failed.
            </para>
            <para>
            If less than the specified number of bytes are transmitted,
            <see cref="M:Codecrete.Wirekite.Device.WirekiteDevice.GetLastI2CResult(System.Int32)"/> returns the associated reason.
            </para>
            </remarks>
            <param name="port">the I2C port ID</param>
            <param name="data">the data to transmit</param>
            <param name="slave">the slave address</param>
            <returns>the number of sent bytes</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.SubmitOnI2CPort(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Submits data to be sent to an I2C slave
            </summary>
            <remarks>
            <para>
            The operation performs a complete I2C transaction, starting with a START condition
            and ending with a STOP condition
            </para>
            <para>
            The request is executed asychnronously, i.e. the call returns immediately. If the
            transaction fails, no error is reported.
            </para>
            </remarks>
            <param name="port">the I2C port ID</param>
            <param name="data">the data to transmit</param>
            <param name="slave">the slave address</param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.RequestDataOnI2CPort(System.Int32,System.Int32,System.Int32)">
            <summary>
            Request data from an I2C slave
            </summary>
            <remarks>
            <para>
            The operation performs a complete I2C transaction, starting with a START condition
            and ending with a STOP condition.
            </para>
            <para>
            The operation is executed sychnronously, i.e. the call blocks until the
            transaction has been completed or has failed.If the transaction fails,
            use <see cref="M:Codecrete.Wirekite.Device.WirekiteDevice.GetLastI2CResult(System.Int32)"/> to retrieve the reason
            </para>
            </remarks>
            <param name="port">the I2C port ID</param>
            <param name="slave">the slave address</param>
            <param name="receiveLength">the number of bytes of data requested from the slave</param>
            <returns>the received data or <c>null</c> if it fails</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.SendAndRequestOnI2CPort(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Send data to and request data from an I2C slave in a single operation
            </summary>
            <remarks>
            <para>
            The operation performs a complete I2C transaction, starting with a START condition,
            a RESTART condition when switching from transmission to receipt, and ending with
            a STOP condition.
            </para>
            <para>
            The request is executed sychnronously, i.e. the call blocks until the data
            has been transmitted and received, or the transmission has failed.
            </para>
            <para>
            If less than the specified number of bytes are transmitted, `nil` is returned and
            <see cref="M:Codecrete.Wirekite.Device.WirekiteDevice.GetLastI2CResult(System.Int32)"/> returns the associated reason.
            </para>
            </remarks>
            <param name="port">the I2C port ID</param>
            <param name="data">the data to transmit</param>
            <param name="slave">the slave address</param>
            <param name="receiveLength">the number of bytes of data request from the slave</param>
            <returns>the received data or <c>null</c> if the transaction fails</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ConfigurePWMOutputPin(System.Int32,System.Double)">
            <summary>
            Configures a pin as a PWM output.
            </summary>
            <param name="pin">the pin as labelled on the board</param>
            <param name="initialDutyCycle">the initial duty cycle between 0.0 for 0% and 1.0 for 100%</param>
            <returns>the PWM output's port ID</returns>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ReleasePWMPin(System.Int32)">
            <summary>
            Releases a pin configured as a PWM output.
            </summary>
            <param name="port">the PWM output's port ID</param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ConfigurePWMTimer(System.Int32,System.Int32,Codecrete.Wirekite.Device.PWMTimerAttributes)">
            <summary>
            Configures a timer associated with PWM outputs.
            </summary>
            <remarks>
            A PWM output is linked to a timer. Several PWM outputs
            share the same timer.
            See ... for the association between PWM pins and timers.
            When configuring a PWM timer, it might affect several PWM outputs.
            </remarks>
            <param name="timer">the timer index (0 .. n, depending on the board)</param>
            <param name="frequency">the frequency of the PWM signal (in Hz)</param>
            <param name="attributes">PWM attributes such as edge/center aligned</param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.ConfigurePWMChannel(System.Int32,System.Int32,Codecrete.Wirekite.Device.PWMChannelAttributes)">
            <summary>
            Configures a channel associated with PWM outputs.
            </summary>
            <remarks>
            A PWM output is linked to a timer and a channel. Several PWM outputs
            share the same timer and several ones share the same channel, which is
            itself linked to a timer.
            See ... for the association between PWM pins, timers and channels.
            When configuring a PWM channel, it might affect several PWM outputs.
            </remarks>
            <param name="timer">the timer index (0 .. n, depending on the board)</param>
            <param name="channel">the channel index (0 .. n, depending on the board and the timer)</param>
            <param name="attributes">PWM channel attributes such as high or low puleses</param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteDevice.WritePWMPin(System.Int32,System.Double)">
            <summary>
            Sets the duty cycle of a PWM output
            </summary>
            <param name="port">the PWM output's port ID</param>
            <param name="dutyCycle">the duty cycle between 0.0 (for 0%) and 1.0 (for 100%)</param>
        </member>
        <member name="T:Codecrete.Wirekite.Device.AnalogPin">
            <summary>
            Pin to use for analog input or output
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A0">
            <summary>Analog pin A0</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A1">
            <summary>Analog pin A1</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A2">
            <summary>Analog pin A2</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A3">
            <summary>Analog pin A3</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A4">
            <summary>Analog pin A4</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A5">
            <summary>Analog pin A5</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A6">
            <summary>Analog pin A6</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A7">
            <summary>Analog pin A7</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A8">
            <summary>Analog pin A8</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A9">
            <summary>Analog pin A9</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A10">
            <summary>Analog pin A10</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A11">
            <summary>Analog pin A11</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A12">
            <summary>Analog pin A12</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A13">
            <summary>Analog pin A13</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A14">
            <summary>Analog pin A14</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A15">
            <summary>Analog pin A15</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A16">
            <summary>Analog pin A16</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A17">
            <summary>Analog pin A17</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A18">
            <summary>Analog pin A18</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A19">
            <summary>Analog pin A19</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.A20">
            <summary>Analog pin A20</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.VREF">
            <summary> Vref / Vref high</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.Temp">
            <summary>Temperature</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.VREFL">
            <summary>Vref low</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.AnalogPin.BandGap">
            <summary>Band gap</summary>
        </member>
        <member name="T:Codecrete.Wirekite.Device.AnalogInputCallback">
            <summary>
            Delegate called periodically to notify about the analog input value.
            </summary>
            <param name="port">the port ID associated with the analog input</param>
            <param name="value">the input value in the range between -1.0 and +1.0</param>
        </member>
        <member name="T:Codecrete.Wirekite.Device.DigitalOutputPinAttributes">
            <summary>
            Additional features of digital output pins
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.DigitalOutputPinAttributes.Default">
            <summary>
            Default. No special features enabled.
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.DigitalOutputPinAttributes.LowCurrent">
            <summary>
            Enables low-current output.
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.DigitalOutputPinAttributes.HighCurrent">
            <summary>
            Enables high-current output.
            </summary>
        </member>
        <member name="T:Codecrete.Wirekite.Device.DigitalInputPinAttributes">
            <summary>
            Additional features of digital input pins
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.DigitalInputPinAttributes.Default">
            <summary>
            Default. No special features enabled.
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.DigitalInputPinAttributes.Pullup">
            <summary>
            Enable the pull-up resistor on the input pin.
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.DigitalInputPinAttributes.Pulldown">
            <summary>
            Enable the pull-down resistor on the input pin.
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.DigitalInputPinAttributes.TriggerRaising">
            <summary>
            Trigger updates on the raising edge of the input signal.
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.DigitalInputPinAttributes.TriggerFalling">
            <summary>
            Trigger updates on the falling edge of the input signal.
            </summary>
        </member>
        <member name="T:Codecrete.Wirekite.Device.InputCommunication">
            <summary>
            Communication type with Wirekite device for input pins.
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.InputCommunication.OnDemand">
            <summary>
            Read input value on demand.
            </summary>
            <remarks>
            Each read operation requires a communication round-trip with the device.
            </remarks>
        </member>
        <member name="F:Codecrete.Wirekite.Device.InputCommunication.Precached">
            <summary>
            Precache input values.
            </summary>
            <remarks>
            The device transmits the input value to the host periodically or on change.
            Read operations do not require any communication with the device.</remarks>
        </member>
        <member name="T:Codecrete.Wirekite.Device.DigitalInputCallback">
            <summary>
            Delegate called when the digital input changes its value.
            </summary>
            <param name="port">the port ID associated with the digital input</param>
            <param name="value">the new input value</param>
        </member>
        <member name="T:Codecrete.Wirekite.Device.I2CPins">
            <summary>
            I2C SCL/SDA pin pairs
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CPins.I2CPinsSCL16_SDA17">
            <summary> SCL/SDA pin pair 16/17 for I2C module 0 </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CPins.I2CPinsSCL19_SDA18">
            <summary> SCL/SDA pin pair 19/18 for I2C module 0 </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CPins.I2CPinsSCL22_SDA23">
            <summary> SCL/SDA pin pair 22/23 for I2C module 1 (Teensy LC only)</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CPins.I2CPinsSCL29_SDA30">
            <summary> SCL/SDA pin pair 29/30 for I2C module 1 (Teensy 3.2 only)</summary>
        </member>
        <member name="T:Codecrete.Wirekite.Device.I2CResult">
            <summary>
            Result code for I2C send and receive transactions
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CResult.OK">
            <summary> Action was successful </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CResult.Timeout">
            <summary> Action timed out </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CResult.ArbitrationLost">
            <summary> Action was cancelled due to a lost bus arbitration </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CResult.AddressNAK">
            <summary> Slave address was not acknowledged </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CResult.DataNAK">
            <summary> Transmitted data was not acknowledged </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CResult.OutOfMemory">
            <summary> Insufficient memory in Wirekite device to process transaction</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CResult.BusBusy">
            <summary> I2C bus is busy </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CResult.Unknwon">
            <summary> Unknown error occurred </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.I2CResult.InvalidParameter">
            <summary> Invalid parameters were specified </summary>
        </member>
        <member name="T:Codecrete.Wirekite.Device.PWMTimerAttributes">
            <summary>
            Additional features of PWM timers
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.PWMTimerAttributes.Default">
            <summary> Default. No special features enabled.</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.PWMTimerAttributes.EdgeAligned">
            <summary> Edge-aligned PWM signals. </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.PWMTimerAttributes.CenterAligned">
            <summary> Center-aligned PWM signals. </summary>
        </member>
        <member name="T:Codecrete.Wirekite.Device.PWMChannelAttributes">
            <summary>
            Additional features of PWM channels
            </summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.PWMChannelAttributes.Default">
            <summary> Default. No special features enabled.</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.PWMChannelAttributes.HighPulse">
            <summary> Output high on pulse.</summary>
        </member>
        <member name="F:Codecrete.Wirekite.Device.PWMChannelAttributes.LowPulse">
            <summary> Output low on pulse.</summary>
        </member>
        <member name="T:Codecrete.Wirekite.Device.IWirekiteDeviceNotification">
            <summary>
            Interface to be implemented by classes that receive notifications about connected and disconnected Wirekite devices.
            </summary>
        </member>
        <member name="M:Codecrete.Wirekite.Device.IWirekiteDeviceNotification.OnDeviceConnected(Codecrete.Wirekite.Device.WirekiteDevice)">
            <summary>
            Called when a device has been connected and initially when the <see cref="T:Codecrete.Wirekite.Device.WirekiteService"/> is created.
            </summary>
            <param name="device">the connected device</param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.IWirekiteDeviceNotification.OnDeviceDisconnected(Codecrete.Wirekite.Device.WirekiteDevice)">
            <summary>
            Called when a device has been disconnected.
            </summary>
            <param name="device">the disconnected device</param>
            <remarks>
            The device is already closed and all configured ports are invalid.
            </remarks>
        </member>
        <member name="T:Codecrete.Wirekite.Device.WirekiteService">
            <summary>
            Service to notify about connected and disconnected devices.
            </summary>
            <remarks>
            When an instance of this class is created, it immediately notifies about
            the already connected devices.
            </remarks>
        </member>
        <member name="F:Codecrete.Wirekite.Device.WirekiteService.WirekiteInterfaceGuid">
            <summary>
            The GUID of the USB interface of the Wirekite device.
            </summary>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteService.#ctor(Codecrete.Wirekite.Device.IWirekiteDeviceNotification,System.Windows.Window)">
            <summary>
            Constructs an instance
            </summary>
            <param name="notification">the object to be notified about connected and disconnected Wirekite devices</param>
            <param name="wpfWindow">a WPF window used to hook into Windows message handling</param>
            <remarks>The specified notification object will be immediately notified about already connected Wirekite devices</remarks>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteService.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources associated with this service
            </summary>
            <param name="disposing">Indicates if it is called from <see cref="M:Codecrete.Wirekite.Device.WirekiteService.Dispose"/></param>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteService.Finalize">
            <summary>
            Finalizes this instance
            </summary>
        </member>
        <member name="M:Codecrete.Wirekite.Device.WirekiteService.Dispose">
            <summary>
            Disposes of all resources associated with this instance
            </summary>
        </member>
    </members>
</doc>
